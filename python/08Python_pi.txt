1>: Python 函数的定义与使用
    ===> 使用保留字def 定义函数，lambda定义匿名函数
    1>>:函数的定义
        ===> 函数是一段具有特定功能的，可重用的语句组
        ===> 函数是一种功能的抽象，一般函数表达特定的功能
        ===> 函数的两个作用： 降低编程难度和代码复用
        ===> 函数是一段代码的表示 ：
            def <函数名>(<参数（0个或者多个）>)

    ===> 可选参数（赋初值），，可变参数（*b）， 名称传递
    ===> 函数定义 ：
        def <函数名> （<参数（0个或者多个）>）:
            <函数体>
            return <返回值>
    ===> 函数定义时 ，所指定的参数是一种占位符
    ===> 函数定义后， 如果没有经过调用，是不会执行的

2>: 函数的调用
    ===> 调用是运行函数代码的方式
        ===> 调用时要给出实际参数===> 实际参数替换定义中的参数===>函数调用后得到返回值

3>: 函数参数个数
     ===>参数个数： ===> 函数可以有参数，也可由没有，但是必须保留括号
     ===>可选参数传递 ===> 函数定义时可以为某些参数指定默认值，构成可选参数
     ===> 可变参数传递 ===> 函数定义时可以设计可变参数变量，既不确定参数总数量 def <函数名> （*b）
     ===> 参数的传递 ===> 1:按照参数的位置传递参数 ===>2：按照参数的名称传递参数 count(m=10,n=20)


4>:函数的返回值
    ===>函数可以返回0个或者多个结构
        ===> return 保留至用来传递返回值
        ===> 函数可以有返回值，也可以没有，可以用return, 也可以没有
        ===> return 可以返回0个返回值也可以返回多个值 ===> return  m,n
        ===> 也可以使用返回元组方式 返回多个值 return（1,10,23）

5>:函数的全局变量和局部变量
    ===> 规则一：局部变量和全局变量是不同的变量
        ===> 局部变量是函数内部的占位符，与全局变量可能会崇明但是不相同
        ===> 函数运行结束后，局部变量将会被释放掉
        ===> 也可以在函数内部使用global声明全局变量
        ===> 使用外部变量的时候，需要使用global

    ===> 规则二 局部变量为组合数据类型且未创建，等同于全局变量
    ===> 使用规则：基本数据类型，无论是否重名，局部变量与全局变量不同，
          ===> 可以通过global保留字在函数内部声明全局变量
          ===> 组合数据类型，如果局部变量没有真实创建，则是全局变量

6>:lambda函数
    ===> lambda函数返回函数名作为结果
    ===> lambda是一种匿名函数，既没有名字的函数
    ===> 使用lambda保留字定义，函数名是返回结果
    ===> lambda函数用于定义简单的，能够在一行内表示的函数
    ===> <函数名> = lambda <参数名> : x+y